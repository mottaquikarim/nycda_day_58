{"home":{"content":"# React Review\n\nWelcome to Lecture 58! Here is a brief class breakdown.\n\n## Learning Objectives\n\n1. Practice + get comfortable with state vs props\n2. Understand how flux can be set up with React\n\n## To Do Today\n\nHere's the game plan for today. We are to learn mainly the **mechanics** of flux, jsx, state management, etc today. Don't try to find any deeper meaning behind the problems that follow - there isn't one.\n\n## 1\n\nFirst, **[clone this](https://github.com/mottaquikarim/nycda_react_starter)** repo.\n\n(**NOTE**: **[this repo](https://github.com/mottaquikarim/todolist_flux/tree/lecture_57_react-notes)** might come in handy for review as well).\n\n## 2\n\nCreate a simple react component that includes:\n\n1. A two column layout\n1. In the first column, display a dropdown with five options: **1, 2, 3, 4, 5**.\n2. The second column should always update to display the currently selected value of the dropdown in column 1.\n\n**Question**: is flux needed here? why or why not? what are the tradeoffs for using flux or just going with a simple set state?\n\n## 3\n\nNow, let's break out #2 to make it more reusable.\n\nCreate a **Store** that will include the **default** values needed for your two column react component. \n\nUpdate your simple react component to initialize it's state using your **Store** object.\n\n## 4\n\nNow, in order to achieve #2, you probably had to deal with some event handlers that performed logic. \n\nRefactor that code to now just dispatch actions. You'll want to write an **actions** object to handle your dispatches as well. (For now, the can just console.log the action name).\n\n## 5\n\nFinally, let's create some reducers. Update your action handlers to call reducer functions you've written that will actually update your store.\n\nConfigure your component to actually reflect these changes to the store.\n\n## 6\n\nFinally, let's make this ish asynch. Using the **[numbers api](http://numbersapi.com/#42)**, update the content in column 2 to display an interesting fact about the number selected in the dropdown in column 1. Remember, you have to use our flux pattern to pull this off.\n\n**Ta-da!** If you made it here, you've successfully implemented a simple flux implementation.\n\n## 7\n\n**#STRETCH-GOALZ**: refactor your actions / store into seperate files and include them all into a simple **index.js** that simply describes how your app is bootstrapped.\n\n\n\n\n","idx":0},"title":{"content":"React Review","idx":1},"desc":{"content":"Review react + flux","idx":2},"__list__":["home","title","desc"]}